<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- Enable @PreAuthorize (RollesAllowed) @PreAuthorize("hasRole('ROLE_ADMIN')")-->
	<global-method-security pre-post-annotations="enabled">
		<expression-handler ref="goalExpressionHandler"/>
	</global-method-security>
	
	<!-- Property values injection from application.properties 
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location" value="classpath:application.properties"/> 
	</beans:bean>-->
	
	
	<!-- Enable Permissions  Difference with previous - permission to run method - add Goal for exact user type (admin).
	 Main class - GoalPermissionsEvaluetor.java. Special annotation needed @PreAuthorize("hasPermission(#event, 'createEvent')")-->
	<beans:bean id="goalExpressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<beans:property name="permissionEvaluator">
			<beans:bean id="permissionEvaluator" class="com.example.security.GoalPermissionsEvaluetor">
				<beans:property name="datasource" ref="dataSource"/>
			</beans:bean>
		</beans:property>	
	</beans:bean>
	
	<!-- <http auto-config="true" use-expressions="true">
		<intercept-url pattern="/login.html" access="permitAll"/>
		<intercept-url pattern="/loginFailed.html" access="permitAll"/>
		<intercept-url pattern="/logout.html" access="permitAll"/>
		<intercept-url pattern="/403.html" access="permitAll"/>
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
		<form-login login-page="/login.html" authentication-failure-url="/loginFailed.html"/> 
		<logout logout-success-url="/logout.html"/>
		<access-denied-handler error-page="/403.html"/>
		<http-basic/> Enable basic authentication
	</http> -->
	
		
	

	<!-- <authentication-manager>
		<authentication-provider>
			<password-encoder hash="bcrypt"/>
			<jdbc-user-service data-source-ref="dataSource"/>Store credentials in DB
			<user-service>
				<user name="root" password="root" authorities="ROLE_USER"/>
				<user name="admin" password="admin" authorities="ROLE_ADMIN"/>
			</user-service>  Store credentials in memory 
		</authentication-provider>
	</authentication-manager>  -->
	
	<!-- Already defined in persistanceConfig.java 
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="${jdbc.driverClassName}"/>
		<beans:property name="url" value="${jdbc.url}" />
		<beans:property name="username" value="${jdbc.username}"/>
		<beans:property name="password" value="${jdbc.password}"></beans:property>
	</beans:bean> -->

</beans:beans>


